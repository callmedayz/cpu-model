[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "intel-optimized-ai-model"
version = "1.0.0"
description = "Intel-optimized AI model for CPU-only deployment"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Intel AI Model Project", email = "veiledmirage@gmail.com"}
]
maintainers = [
    {name = "Intel AI Model Project", email = "veiledmirage@gmail.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.20.0",
    "datasets>=2.0.0",
    "numpy>=1.21.0",
    "tqdm>=4.64.0",
    "psutil>=5.9.0",
    "accelerate>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "myst-parser>=0.15",
]

[project.urls]
Homepage = "https://github.com/callmedayz/cpu-model"
Repository = "https://github.com/callmedayz/cpu-model"
Documentation = "https://github.com/callmedayz/cpu-model/blob/main/README.md"
"Bug Reports" = "https://github.com/callmedayz/cpu-model/issues"

[project.scripts]
intel-ai = "main:main"
intel-ai-chat = "src.intel_chat_system:main"
intel-ai-train = "src.intel_training_loop:main"
intel-ai-eval = "src.intel_model_evaluator:main"

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.json"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | ai_env
)/
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "ai_env",
    ".venv",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "ai_env/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
